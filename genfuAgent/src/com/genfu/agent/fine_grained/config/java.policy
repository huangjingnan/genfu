grant codeBase "file:genfuAgent.jar" {
    //
    // The server requires the permissions to create and register the connector
    // and all the permissions required by the operations performed by remote
    // user calls. Here AllPermission is granted for simplicity.
    //
    permission java.security.AllPermission;
};

grant codeBase "file:/home/xuzhenfu/app_genfu/genfu/-" {
    //
    // The server requires the permissions to create and register the connector
    // and all the permissions required by the operations performed by remote
    // user calls. Here AllPermission is granted for simplicity.
    //
    permission java.security.AllPermission;
};

grant codeBase "file:/home/xuzhenfu/jmx_examples/Security/fine_grained/-" {
    permission javax.management.MBeanTrustPermission "register";
};

grant principal javax.management.remote.JMXPrincipal "username" {
	permission java.io.FilePermission "/etc/network/interfaces", "read,write";
	permission java.io.FilePermission "/etc/init.d/networking", "execute";
	permission java.io.FilePermission "/root/upgrade.sh", "execute";
	permission java.io.FilePermission "<<ALL FILES>>", "execute" ;
	permission java.io.FilePermission "/bin/su", "execute";
	permission java.io.FilePermission "/bin/sh", "execute";
	permission java.io.FilePermission "/home/xuzhenfu/app_genfu/genfu/-", "read,write";
	permission java.io.FilePermission "/home/xuzhenfu/app_genfu/genfu/genfudeploy.sh", "execute";
	permission java.io.FilePermission "/usr/bin/unzip", "execute";
	permission java.io.FilePermission "/bin/cp", "execute";
	permission java.io.FilePermission "/bin/rm", "execute";
    permission javax.management.MBeanPermission "*", "getDomains";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#-[-]", "instantiate";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#-[com.genfu.agent.mxbeans:type=ConfigNetwork]", "registerMBean";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#State[com.genfu.agent.mxbeans:type=ConfigNetwork]", "getAttribute";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#State[com.genfu.agent.mxbeans:type=ConfigNetwork]", "setAttribute";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#-[com.genfu.agent.mxbeans:type=ConfigNetwork]", "addNotificationListener";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#cfgDebian[com.genfu.agent.mxbeans:type=ConfigNetwork]", "invoke";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#cfgUpgrade[com.genfu.agent.mxbeans:type=ConfigNetwork]", "invoke";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#-[com.genfu.agent.mxbeans:type=ConfigNetwork]", "removeNotificationListener";
    permission javax.management.MBeanPermission "com.genfu.agent.mxbeans.ConfigNetwork#-[com.genfu.agent.mxbeans:type=ConfigNetwork]", "unregisterMBean";
    //
    // This permission is only required for the authenticated user and not for the delegated users.
    //
    // The RMI connector client registers a listener on the MBeanServerDelegate to control the MBean
    // creation/deletion. The listener is removed when the connection to the server is closed.
    //
    permission javax.management.MBeanPermission "javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]", "addNotificationListener";
    permission javax.management.MBeanPermission "javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]", "removeNotificationListener";
};
